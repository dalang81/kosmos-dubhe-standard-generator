/* eslint-disable  */
import {RegistStandardEnum} from 'kosmos-dubhe-standard-utils';

{{#enums}}
class {{UpperCamelCategory}} {
    static CATEGORY = '{{Upper_Snake_Category}}';
    static CATEGORY_NAME = '{{categoryName}}';

    constructor(itemName, itemKey, itemValue, itemSeq, remark) {
        this.itemName = itemName;
        this.itemKey = itemKey;
        this.itemValue = itemValue;
        this.itemSeq = itemSeq;
        this.remark = remark;
    }

    getItemName() {
        return this.itemName;
    }

    getItemValue() {
        return this.itemValue;
    }

    getItemKey() {
        return this.itemKey;
    }

    getItemSeq() {
        return this.itemSeq;
    }

    getRemrk() {
        return this.remark;
    }

    getCategory() {
        return {{UpperCamelCategory}}.CATEGORY;
    }

    getCategoryName() {
        return {{UpperCamelCategory}}.CATEGORY_NAME;
    }
}
{{#items}}
{{UpperCamelCategory}}.{{itemLabel}} = new {{UpperCamelCategory}}('{{itemName}}', '{{itemKey}}', '{{itemValue}}', {{itemSeq}}, '{{remark}}'); {{#remark}}//{{/remark}} {{remark}}
{{/items}}

/************************** {{UpperCamelCategory}} define end ***************************/

{{/enums}}

const {{clazz}} = {};

{{#enums}}
{{UpperCamelCategory}}.$ALL = [

{{#items}}
{{UpperCamelCategory}}.{{itemKey}},
{{/items}}
];

Object.freeze({{UpperCamelCategory}});
export { {{UpperCamelCategory}} };

/************************** {{UpperCamelCategory}} export end ***************************/

{{/enums}}

{{#enums}}
{{clazz}}['{{UpperCamelCategory}}'] = {{UpperCamelCategory}}.$ALL;
{{clazz}}['{{Upper_Snake_Category}}'] = {{UpperCamelCategory}}.$ALL;
{{/enums}}

export default {{clazz}};
export function FindEnum(type) {
    return type.$ALL || {{clazz}}[type];
}

export function getName() {
return "{{clazz}}";
}
{{clazz}}.FindEnum = FindEnum;
RegistStandardEnum({{clazz}});

/* eslint-enable  */
